{"version":3,"sources":["contexts/address.tsx","contexts/mox.tsx","contexts/index.tsx","styles/colors.ts","atoms/button.tsx","atoms/input.tsx","atoms/title.tsx","atoms/card.tsx","atoms/text.tsx","molecules/setSeed.tsx","pages/login.tsx","molecules/disableAccount.tsx","organisms/header.tsx","assets/Brute_1.png","molecules/actor.tsx","molecules/getActor.tsx","organisms/myActor.tsx","molecules/speedItem.tsx","assets/increaseSpeedPotion.png","assets/decreaseSpeedPotion.png","organisms/items.tsx","game/index.tsx","pages/home.tsx","Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DEFAULT_VALUE","address","setAddress","AddressContext","createContext","AddressContextProvider","children","useState","Provider","value","modules","undefined","setModules","MoxContext","MoxContextProvider","GlobalContext","yellow","black","Button","styled","button","Input","input","Title","text","Card","BCard","Text","SetSeed","useContext","Error","seed","setSeed","err","setErr","enableSeed","a","length","account","enableAccountBySeed","publicKey","error","message","style","color","onChange","e","target","display","flexDirection","justifyContent","width","onClick","createMnemonic","mnemonicToSeed","LoginPage","height","alignItems","DisableAccount","disableAccount","Header","Container","Row","Col","flex","Actor","params","actor","Image","src","HeroImg","common_type","id","owner","speed","GetActor","actorHash","setActorHash","search","storage","getActor","console","log","getActorAttribute","setActor","commonType","placeholder","disabled","MyActor","useEffect","setSpeed","SpeedItem","itemBalance","setItemBalance","operation","itemProperties","setItemProperties","getItem","getItemActions","itemId","item","amount","getItemBalance","getItemBalances","balance","consumeItem","actorId","transaction","signAndSendTransaction","txhash","itemAsset","itemName","Items","IncreaseSpeedImg","DecreaseSpeedImg","QompGame","playGame","gameOver","gameWin","map","layer","hero","star","enemy","counterNewEnemy","this","load","tilemapTiledJSON","image","make","tilemap","key","tile","addTilesetImage","createStaticLayer","setCollision","physics","add","sprite","setBounce","setVelocity","Math","cos","PI","sin","collider","hitStar","group","hitEnemy","on","changeDirection","cameras","main","setBounds","startFollow","pause","setTint","body","velocity","y","x","Phaser","Between","create","world","collide","flipX","createEnemy","setTimeout","scene","remove","endGame","Scene","gameConfig","type","AUTO","backgroundColor","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","default","arcade","gravity","Game","HomePage","gameStart","setGameStart","Router","mox","network","serviceUrl","then","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9235e1d.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\ntype PropsAddressContext = {\r\n  address: string\r\n  setAddress: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst DEFAULT_VALUE: PropsAddressContext = {\r\n  address: \"\",\r\n  setAddress: () => {}\r\n}\r\n\r\nconst AddressContext = createContext<PropsAddressContext>(DEFAULT_VALUE)\r\n\r\nconst AddressContextProvider: React.FC = ({ children }) => {\r\n  const [ address, setAddress ] = useState<string>(DEFAULT_VALUE.address)\r\n  return (\r\n    <AddressContext.Provider\r\n      value = {{\r\n        address,\r\n        setAddress\r\n      }}\r\n    >\r\n      {children}\r\n      </AddressContext.Provider>\r\n  )\r\n}\r\n\r\nexport { AddressContextProvider }\r\nexport default AddressContext","import { Modules } from '@moxchain/sdk'\r\nimport React, { createContext, useState } from 'react'\r\n\r\ntype PropsMoxContext = {\r\n  modules: Modules | undefined\r\n  setModules: React.Dispatch<React.SetStateAction<Modules | undefined>>\r\n}\r\n\r\nconst DEFAULT_VALUE: PropsMoxContext = {\r\n  modules: undefined,\r\n  setModules: () => {}\r\n}\r\n\r\nconst MoxContext = createContext<PropsMoxContext>(DEFAULT_VALUE)\r\n\r\nconst MoxContextProvider: React.FC = ({ children }) => {\r\n  const [ modules, setModules ] = useState<Modules | undefined>(DEFAULT_VALUE.modules)\r\n  return (\r\n    <MoxContext.Provider\r\n      value = {{\r\n        modules,\r\n        setModules\r\n      }}\r\n    >\r\n      {children}\r\n      </MoxContext.Provider>\r\n  )\r\n}\r\n\r\nexport { MoxContextProvider }\r\nexport default MoxContext","import React from 'react'\r\nimport { AddressContextProvider } from './address'\r\nimport { MoxContextProvider } from './mox'\r\n\r\nconst GlobalContext: React.FC = ({ children }) => {\r\n  return <MoxContextProvider>\r\n    <AddressContextProvider>\r\n      {children}\r\n      </AddressContextProvider>\r\n    </MoxContextProvider>\r\n}\r\n\r\nexport default GlobalContext","export const yellow = '#d16d26'\r\nexport const black = '#212021'","import styled from 'styled-components'\r\nimport { black, yellow } from '../styles/colors'\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  color: white;\r\n  background-color: ${black};\r\n  font-size: 1em;\r\n  margin-top: 1em;\r\n  margin-bottom: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid ${yellow};\r\n  border-radius: 1vh;\r\n  display: block;\r\n  &:hover {\r\n    background-color: ${yellow};\r\n    color: ${black};\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const Input = styled.input`\r\n  border: 2px solid;\r\n  border-radius: 3px;\r\n`","import styled from 'styled-components'\r\n\r\nexport const Title = styled.text`\r\n  font-size: 2em;\r\n  color: white;\r\n  font-family: monospace,monospace;\r\n`","import styled from 'styled-components'\r\nimport { black, yellow } from '../styles/colors'\r\nimport { Card as BCard } from 'react-bootstrap'\r\n\r\nexport const Card = styled(BCard)`\r\n  border: 2px solid ${yellow};\r\n  border-radius: 1vh;\r\n  background-color: ${black};\r\n  padding: 1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n`","import styled from 'styled-components'\r\n\r\nexport const Text = styled.text`\r\n  font-size: 1em;\r\n  color: white;\r\n  font-family: monospace,monospace;\r\n`","import React, { useState, useContext } from 'react'\r\nimport MoxContext from '../contexts/mox'\r\nimport AddressContext from '../contexts/address'\r\nimport {\r\n  Button,\r\n  Input,\r\n  Title,\r\n  Text,\r\n  Card\r\n} from '../atoms'\r\n\r\nexport const SetSeed = () => {\r\n  const {modules} = useContext(MoxContext)\r\n  if (!modules) throw new Error('Mox modules not initialized')\r\n  const {setAddress} = useContext(AddressContext)\r\n \r\n  const [seed, setSeed] = useState(\"\")\r\n  const [err, setErr] = useState(\"\")\r\n\r\n  const createSeed = () => {\r\n    setErr(\"\")\r\n    modules.account.createMnemonic()\r\n    const seed = modules.account.mnemonicToSeed()\r\n    setSeed(seed)\r\n  }\r\n\r\n  const enableSeed = async () => {\r\n    setErr(\"\")\r\n    if (seed.length < 1) {\r\n      return setErr(\"Invalid seed: empty\")\r\n    }\r\n    try {\r\n      modules.account.setSeed(seed)\r\n      modules.account.enableAccountBySeed()\r\n      const publicKey = modules.account.publicKey()\r\n      setAddress(publicKey)\r\n    } catch (error: any) {\r\n      setErr(error.message)\r\n    }\r\n  }\r\n\r\n  return <Card>\r\n        <Title>Enter with your seed:</Title>\r\n        <Text style={{\r\n          color: 'red'\r\n        }}>\r\n          {err}\r\n        </Text>\r\n        <Input value={seed} onChange={\r\n          (e: any) => setSeed(e.target.value) \r\n        }/>\r\n        <div style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <Button\r\n            style={{\r\n              width: '40%'\r\n            }}\r\n            onClick={enableSeed}\r\n          > Enter </Button>\r\n          <Button\r\n            style={{\r\n              width: '40%'\r\n            }}\r\n            onClick={createSeed}\r\n          > Create seed </Button>\r\n        </div>\r\n      </Card>\r\n}","import React from 'react'\r\nimport {SetSeed} from '../molecules/setSeed'\r\n\r\nconst LoginPage = () => {\r\n  return <div style={{\r\n    display: 'flex',\r\n    height: '100vh',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }}>\r\n    <SetSeed/>\r\n  </div>\r\n}\r\n\r\nexport default LoginPage","import React, {useContext} from 'react'\r\nimport {\r\n  Button\r\n} from '../atoms'\r\nimport MoxContext from '../contexts/mox'\r\nimport AddressContext from '../contexts/address'\r\n\r\nexport const DisableAccount = () => {\r\n  const {modules} = useContext(MoxContext)\r\n  const {address, setAddress} = useContext(AddressContext)\r\n  if (address.length === 0) throw new Error('Account not set')\r\n  if (!modules) throw new Error('Mox not initialize')\r\n  \r\n  const disableAccount = () => {\r\n    modules.account.disableAccount()\r\n    setAddress(\"\")\r\n  }\r\n\r\n  return <Button onClick={disableAccount}>\r\n    Disable Account\r\n  </Button>\r\n}","import React, { useContext } from 'react'\r\nimport AddressContext from '../contexts/address'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col\r\n} from 'react-bootstrap'\r\nimport {\r\n  DisableAccount\r\n} from '../molecules/disableAccount'\r\nimport {\r\n  Text\r\n} from '../atoms'\r\n\r\nexport const Header = () => {\r\n  const {address} = useContext(AddressContext)\r\n\r\n  return (\r\n  <Container>\r\n    <Row\r\n    style={{\r\n      alignItems: 'center'\r\n    }}>\r\n    <Col style={{flex: 1}}>\r\n      <DisableAccount/>\r\n    </Col>\r\n    <Col style={{flex: 5}}>\r\n      <Text>\r\n        Address: {address}\r\n      </Text>\r\n    </Col>\r\n    </Row>\r\n  </Container>    \r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/Brute_1.cfe096f3.png\";","import React from 'react'\r\nimport { Col, Image, Row } from 'react-bootstrap'\r\nimport { Card } from '../atoms'\r\nimport HeroImg from '../assets/Brute_1.png'\r\n\r\nconst Actor = (params: {\r\n  actor: {\r\n    id: string;\r\n    common_type: number;\r\n    owner: string;\r\n    speed: number;\r\n} | null | undefined\r\n}) => {\r\n  const { actor } = params\r\n  if (!actor) throw new Error('Actor not set')\r\n\r\n  return <Card>\r\n    <Col>\r\n      <Image src={HeroImg} width='50vh' height='50vh'/>\r\n    </Col>\r\n    <Col>\r\n      <Row>\r\n        Type: {actor.common_type}\r\n      </Row>\r\n      <Row>\r\n        ID: {actor.id}\r\n      </Row>\r\n      <Row>\r\n        Owner: {actor.owner}\r\n      </Row>\r\n      <Row>\r\n        Speed: {actor.speed}\r\n      </Row>\r\n    </Col>\r\n  </Card>\r\n}\r\n\r\nexport default Actor","import React, { useContext } from \"react\";\r\nimport MoxContext from \"../contexts/mox\";\r\nimport AddressContext from \"../contexts/address\";\r\nimport { useState } from \"react\";\r\nimport { Button, Card, Input, Title } from \"../atoms\";\r\n\r\nexport const GetActor = (params: {\r\n  setActor: React.Dispatch<\r\n    React.SetStateAction<\r\n      | {\r\n          id: string;\r\n          common_type: number;\r\n          owner: string;\r\n          speed: number;\r\n        }\r\n      | null\r\n      | undefined\r\n    >\r\n  >;\r\n}) => {\r\n  const { modules } = useContext(MoxContext);\r\n  const { address } = useContext(AddressContext);\r\n  if (address.length === 0) throw new Error(\"Account not set\");\r\n  if (!modules) throw new Error(\"Mox not initialize\");\r\n\r\n  const [actorHash, setActorHash] = useState(\"\");\r\n\r\n  const search = async () => {\r\n    if (actorHash.length !== 66) return;\r\n    const actor = await modules.storage.getActor(actorHash);\r\n    console.log(\"Actor\", actor);\r\n    if (!actor) return;\r\n    if (actor.owner !== address) return;\r\n    // get actor speed\r\n    let speed = await modules.storage.getActorAttribute(\r\n      actorHash,\r\n      \"0xb8e540f80463545c522611d6a11fd055e901bed49887bbafda7d6dd865b1a650\"\r\n    );\r\n    speed.value = speed.value > 600 ? 600 : speed.value;\r\n    console.log(\"Speed\", speed);\r\n    params.setActor({\r\n      common_type: actor.commonType,\r\n      id: actorHash,\r\n      owner: actor.owner,\r\n      speed: speed.value ?? 300,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Title>Enter with your actor hash</Title>\r\n      <Input\r\n        value={actorHash}\r\n        onChange={(e) => setActorHash(e.target.value)}\r\n        placeholder=\"0x...\"\r\n      />\r\n      <Button onClick={search} disabled={actorHash.length !== 66}>\r\n        Get Char\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Actor from '../molecules/actor'\r\nimport { GetActor } from '../molecules/getActor'\r\n\r\nconst MyActor = (params: {\r\n  setSpeed: React.Dispatch<React.SetStateAction<number | null>>,\r\n  setActor: React.Dispatch<React.SetStateAction<{\r\n    id: string;\r\n    common_type: number;\r\n    owner: string;\r\n    speed: number;\r\n} | null | undefined>>,\r\nactor: {\r\n  id: string;\r\n  common_type: number;\r\n  owner: string;\r\n  speed: number;\r\n} | null | undefined\r\n}) => {\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if (params.actor) params.setSpeed(params.actor.speed)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params.actor])\r\n\r\n  if (!params.actor) {\r\n    return <GetActor setActor={params.setActor}/>\r\n  }\r\n\r\n  return <Actor actor={params.actor}/>\r\n\r\n}\r\n\r\nexport default MyActor","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Card, Button } from '../atoms'\r\nimport { Image, Row } from 'react-bootstrap'\r\nimport MoxContext from '../contexts/mox'\r\nimport AddressContext from '../contexts/address'\r\n\r\n\r\nconst SpeedItem = (params: {\r\n  actor: {\r\n    id: string;\r\n    common_type: number;\r\n    owner: string;\r\n    speed: number;\r\n  },\r\n  itemId: string,\r\n  itemName: string,\r\n  itemAsset: string,\r\n  setActor: React.Dispatch<React.SetStateAction<{\r\n    id: string;\r\n    common_type: number;\r\n    owner: string;\r\n    speed: number;\r\n} | null | undefined>>\r\n}) => {\r\n  const {modules} = useContext(MoxContext)\r\n  const {address} = useContext(AddressContext)\r\n  if (address.length === 0) throw new Error('Account not set')\r\n  if (!modules) throw new Error('Mox not initialize')\r\n\r\n  const [itemBalance, setItemBalance] = useState(0)\r\n  const [itemProperties, setItemProperties] = useState({\r\n    value: 0,\r\n    operation: false\r\n  })\r\n\r\n  const getItem = async () => {\r\n    const item = await modules.storage.getItemActions(params.itemId)\r\n    if (item.length > 0) setItemProperties({\r\n      operation: item[0].operation,\r\n      value: item[0].amount\r\n    })\r\n  }\r\n\r\n  const getItemBalance = async () => {\r\n    try {\r\n      const balance = await modules.storage.getItemBalances(params.itemId, address)\r\n      if (balance) setItemBalance(balance.amount)\r\n    } catch (error) {\r\n      console.log('No item balance')\r\n    }\r\n\r\n  }\r\n\r\n  const consumeItem = async () => {\r\n    if (itemBalance === 0) return\r\n    const transaction = await modules.item.consumeItem({\r\n      actorId: params.actor.id,\r\n      itemId: params.itemId\r\n    }, 64)\r\n    const txhash = await modules.transaction.signAndSendTransaction(transaction)\r\n    console.log('Tx hash', txhash)\r\n    setItemBalance(itemBalance - 1)\r\n    params.setActor({\r\n      ...params.actor,\r\n      speed: params.actor.speed + (itemProperties.operation ? itemProperties.value : - itemProperties.value)\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getItem()\r\n    getItemBalance()\r\n  }, [])\r\n\r\n  return <Card>\r\n    <Row>\r\n      <Image src={params.itemAsset} width='50vh' height='50vh'/>\r\n    </Row>\r\n    <Row>\r\n      {itemProperties.operation ? <p> Increase your speed by {itemProperties.value} </p> : <p> Decrease your speed by {itemProperties.value} </p>}\r\n    </Row>\r\n    <Row>\r\n      <Button disabled={itemBalance === 0} onClick={consumeItem}> Consume {params.itemName} (Available {itemBalance}) </Button>\r\n    </Row>\r\n  </Card>\r\n}\r\n\r\nexport default SpeedItem","export default __webpack_public_path__ + \"static/media/increaseSpeedPotion.2481880e.png\";","export default __webpack_public_path__ + \"static/media/decreaseSpeedPotion.abbaf22e.png\";","import React from \"react\";\r\nimport { Title } from \"../atoms\";\r\nimport SpeedItem from \"../molecules/speedItem\";\r\nimport IncreaseSpeedImg from \"../assets/increaseSpeedPotion.png\";\r\nimport DecreaseSpeedImg from \"../assets/decreaseSpeedPotion.png\";\r\n\r\nconst Items = (params: {\r\n  actor?:\r\n    | {\r\n        id: string;\r\n        common_type: number;\r\n        owner: string;\r\n        speed: number;\r\n      }\r\n    | null\r\n    | undefined;\r\n  setActor: React.Dispatch<\r\n    React.SetStateAction<\r\n      | {\r\n          id: string;\r\n          common_type: number;\r\n          owner: string;\r\n          speed: number;\r\n        }\r\n      | null\r\n      | undefined\r\n    >\r\n  >;\r\n}) => {\r\n  if (!params.actor) {\r\n    return <Title>Load actor to see the available items</Title>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        width: \"70vh\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <SpeedItem\r\n        actor={params.actor}\r\n        setActor={params.setActor}\r\n        itemAsset={IncreaseSpeedImg}\r\n        itemId=\"0x2372c9bb4e2008aa42b7c67533af805aa7477eaac133e16f617ce9e1af888f34\"\r\n        itemName=\"Increase speed potion\"\r\n      />\r\n      <SpeedItem\r\n        actor={params.actor}\r\n        setActor={params.setActor}\r\n        itemAsset={DecreaseSpeedImg}\r\n        itemId=\"0xc71943886a686e3ae37929e0c4ab9074675eef04c1fa69f363af432a89756ab6\"\r\n        itemName=\"Decrease speed potion\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","import React, { useEffect } from 'react'\r\nimport Phaser from 'phaser';\r\n\r\nconst QompGame = (params: {speed: number, endGame: () => void}) => {\r\n\r\n  class playGame extends Phaser.Scene {\r\n    constructor() {\r\n      super(\"PlayGame\");\r\n    }\r\n  \r\n    gameOver: boolean = false\r\n    gameWin: boolean = false\r\n    map: any;\r\n    layer: any;\r\n    hero: any;\r\n    star: any;\r\n    enemy: any;\r\n    counterNewEnemy = 0\r\n  \r\n    preload() {\r\n      this.load.tilemapTiledJSON(\"level\", \"assets/level.json\");\r\n      this.load.image(\"tile\", \"assets/tile.png\");\r\n      this.load.image(\"hero\", \"assets/Brute_1.png\");\r\n      this.load.image(\"enemy\", \"assets/bomb.png\");\r\n      this.load.image(\"star\", \"assets/star.png\");\r\n    }\r\n    create() {\r\n      // creation of \"level\" tilemap\r\n      this.map = this.make.tilemap({\r\n        key: \"level\",\r\n      });\r\n  \r\n      // add tiles to tilemap\r\n      let tile = this.map.addTilesetImage(\"tileset01\", \"tile\");\r\n  \r\n      // which layers should we render? That's right, \"layer01\"\r\n      this.layer = this.map.createStaticLayer(\"layer01\", tile);\r\n  \r\n      // layer (wall) is enabled for collision\r\n      this.layer.setCollision(1);\r\n  \r\n      // add the hero sprite and enable arcade physics for the hero\r\n      this.hero = this.physics.add.sprite(260, 376, \"hero\");\r\n  \r\n      // make hero bounce\r\n      this.hero.setBounce(1);\r\n  \r\n      // set hero velocity\r\n      this.hero.setVelocity(\r\n        params.speed * Math.cos(Math.PI / 4),\r\n        params.speed * Math.sin(Math.PI / 4)\r\n      );\r\n  \r\n      // add the star sprite and enable arcade physics for the star\r\n      this.star = this.physics.add.sprite(800, 400, 'star');\r\n  \r\n      // make star bounce\r\n      this.star.setBounce(1);\r\n  \r\n      this.star.setVelocity(\r\n        100 * Math.cos(Math.PI / 4),\r\n        100 * Math.sin(Math.PI / 4)\r\n      );\r\n  \r\n      // add star and hero collision\r\n      this.physics.add.collider(this.hero, this.star, this.hitStar, undefined, this);\r\n  \r\n      // add enemy group\r\n      this.enemy = this.physics.add.group();\r\n  \r\n      this.physics.add.collider(this.enemy, this.layer);\r\n  \r\n      this.physics.add.collider(this.hero, this.enemy, this.hitEnemy, undefined, this);\r\n  \r\n      // listener for input\r\n      this.input.on(\"pointerdown\", this.changeDirection, this);\r\n  \r\n      // set world bounds to allow camera to follow the hero\r\n      this.cameras.main.setBounds(0, 0, 1920, 1440);\r\n  \r\n      // make the camera follow the hero\r\n      this.cameras.main.startFollow(this.hero);\r\n    }\r\n  \r\n    hitStar (hero: any, star: any) {\r\n      this.physics.pause();\r\n      this.hero.setTint(0x00ff00);\r\n      this.gameWin = true\r\n    }\r\n  \r\n    hitEnemy (hero: any, enemy: any) {\r\n      this.physics.pause();\r\n      this.hero.setTint(0xff0000);\r\n      this.gameOver = true\r\n    }\r\n  \r\n    // method to make the change direction\r\n    changeDirection() {\r\n      // invert hero y velocity\r\n      this.hero.body.velocity.y *= -1;\r\n    }\r\n  \r\n    createEnemy () {\r\n      if (this.counterNewEnemy >= 150) {\r\n        const x =  Phaser.Math.Between(460, 640);\r\n        const enemy = this.enemy.create(x, 16, 'enemy');\r\n        enemy.setBounce(1);\r\n        this.enemy.setVelocity(\r\n          180 * Math.cos(Math.PI / 4),\r\n          180 * Math.sin(Math.PI / 4)\r\n        );\r\n        this.counterNewEnemy = 0;\r\n      } else {\r\n        this.counterNewEnemy++;\r\n      }\r\n    }\r\n  \r\n    // method to be executed at each frame\r\n    update() {\r\n      // handle collision between hero and tiles\r\n      this.physics.world.collide(this.hero, this.layer);\r\n  \r\n      // handle collision between enemy and tiles\r\n      this.physics.world.collide(this.enemy, this.layer);\r\n  \r\n      // handle collision between star and tiles\r\n      this.physics.world.collide(this.star, this.layer);\r\n  \r\n      // flip hero according to direction\r\n      this.hero.flipX = this.hero.body.velocity.x < 0;\r\n  \r\n      // Create more enemy\r\n      this.createEnemy();\r\n  \r\n      // Handle Game Over\r\n      if (this.gameOver === true) {\r\n        setTimeout(()=>{\r\n          this.scene.remove(this)\r\n          params.endGame()\r\n        }, 1000)\r\n        return\r\n      }\r\n  \r\n      // Handle Game win\r\n      if (this.gameWin === true) {\r\n        setTimeout(()=>{\r\n          this.scene.remove(this)\r\n          params.endGame()\r\n        }, 1000)\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const gameConfig = {\r\n      type: Phaser.AUTO,\r\n      backgroundColor: 0x444444,\r\n      scale: {\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n        width: 640,\r\n        height: 480\r\n    },\r\n      physics: {\r\n        default: \"arcade\",\r\n        arcade: {\r\n          gravity: {\r\n            y: 0,\r\n          },\r\n        },\r\n      },\r\n      scene: playGame,\r\n    };\r\n\r\n    new Phaser.Game(gameConfig)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div id=\"phaser-game\" />\r\n  )\r\n}\r\n\r\nexport default QompGame","import React, { useEffect } from 'react'\r\nimport { Row } from 'react-bootstrap'\r\nimport {\r\n  Button\r\n} from '../atoms'\r\nimport { Header } from '../organisms/header'\r\nimport MyActor from '../organisms/myActor'\r\nimport Items from '../organisms/items'\r\nimport QompGame from '../game'\r\nimport { useState } from 'react'\r\n\r\nconst HomePage = () => {\r\n\r\n  const [speed, setSpeed] = useState<number | null>(null)\r\n  const [gameStart, setGameStart] = useState(false)\r\n  const [actor, setActor] = useState<{\r\n    id: string\r\n    common_type: number\r\n    owner: string\r\n    speed: number\r\n  } | null>()\r\n\r\n  useEffect(()=>{\r\n    setSpeed(actor?.speed ?? 300)\r\n  }, [actor, gameStart])\r\n\r\n  const endGame = () => {\r\n    setGameStart(false)\r\n  }\r\n\r\n  if (gameStart) {\r\n    return <QompGame speed={speed ?? 300} endGame={endGame}/>\r\n  }\r\n\r\n  return <div style={{\r\n    display: 'flex',\r\n    height: '100vh',\r\n    justifyContent: 'space-around',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  }}>\r\n      <Row>\r\n        <Header />\r\n      </Row>\r\n\r\n      <Row>\r\n        <MyActor actor={actor} setActor={setActor} setSpeed={setSpeed}/>\r\n      </Row>\r\n      <Row>\r\n        <Items actor={actor} setActor={setActor}/>\r\n      </Row>\r\n      <Row>\r\n        {gameStart === false && <Button disabled={!speed} onClick={()=>setGameStart(true)}>Start Game</Button>}\r\n      </Row>\r\n  </div>\r\n}\r\n\r\nexport default HomePage","import React, { useEffect, useContext } from 'react';\r\nimport mox from '@moxchain/sdk'\r\nimport LoginPage from './pages/login';\r\nimport HomePage from './pages/home';\r\nimport MoxContext from './contexts/mox'\r\nimport AddressContext from './contexts/address'\r\n\r\nfunction Router() {\r\n\r\n  const {modules, setModules} = useContext(MoxContext)\r\n  const { address } = useContext(AddressContext)\r\n\r\n  useEffect(()=>{\r\n    mox({\r\n      network: 'apertio',\r\n      serviceUrl: 'https://arpetio.moxchain.com'\r\n    }).then(modules => {\r\n      setModules(modules)\r\n    })\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  if (modules == null) {\r\n    return (\r\n      <div>\r\n        <h1> Loading Mox SDK </h1>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if (address.length === 0) {\r\n    return (\r\n        <LoginPage/>\r\n    )\r\n  }\r\n  return (\r\n      <HomePage/>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react'\r\nimport GlobalContext from './contexts';\r\nimport Router from './Router';\r\n\r\nfunction App() {\r\n\r\n  // GAME HASH: 0x880597947f754f2467e65c30cbefe841d97099c49a6adaf95dd97421b224bb26\r\n\r\n  // Actor HASH: 0xfe54c10c9691f03b432411d26e45bca7500af7184046c4dc1016ef7467d331b7\r\n\r\n  // Speed attribute: 0xb8e540f80463545c522611d6a11fd055e901bed49887bbafda7d6dd865b1a650\r\n\r\n  return (\r\n    <GlobalContext>\r\n      <Router/>\r\n    </GlobalContext>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}